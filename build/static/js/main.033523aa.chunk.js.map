{"version":3,"sources":["components/Row/index.js","components/DropDown/index.js","pages/Main.js","components/Container/index.js","components/Col/index.js","components/TableHeader/index.js","components/TableBody/index.js","components/Table/index.js","App.js","index.js"],"names":["Row","props","className","fluid","children","DropDown","name","type","keys","func","data-toggle","charAt","toUpperCase","slice","map","key","data-key","onClick","e","target","dataset","Main","useState","orderState","setOrderState","employees","employeesState","setEmployeesState","Object","keysState","setKeysState","departmentKeys","employee","push","department","Array","from","Set","reset","changeParams","affectedRow","query","sorted","sort","a","b","eval","filtered","filter","style","fontSize","size","data","Container","Col","split","join","TableHeader","scope","TableBody","datapoint","id","firstName","lastName","title","salary","Table","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.033523aa.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>;\n};\n\nexport default Row;","import React from \"react\";\n\nfunction DropDown({ name, type, keys, func }) {\n  return <div>\n    <button type=\"button\" className={`btn btn-${type} dropdown-toggle btn-lg btn-block`} data-toggle=\"dropdown\">\n      {name.charAt(0).toUpperCase() + name.slice(1)}\n      </button>\n      <div className=\"dropdown-menu\">\n        {keys.map(key => {\n          return <button className=\"dropdown-item\" type=\"button\" key={key} data-key={key} onClick={e => {\n            func(name, e.target.dataset.key)\n          }}>\n            {key.charAt(0).toUpperCase() + key.slice(1)}\n          </button>\n        })}\n       \n      </div>\n    </div>\n};\n\nexport default DropDown;","import React, { useState } from 'react';\nimport Container from \"../components/Container\";\nimport Row from \"../components/Row\";\nimport Col from \"../components/Col\";\nimport Table from \"../components/Table\";\nimport DropDown from \"../components/DropDown\";\nimport employees from \"../employees.json\";\n\nfunction Main() {\n  const [orderState, setOrderState] = useState('id');\n  const [employeesState, setEmployeesState] = useState(employees);\n  const [keysState, setKeysState] = useState(Object.keys(employeesState[0]));\n\n  function departmentKeys() {\n    let keys = [];\n    employeesState.map(employee => {\n      keys.push(employee.department);\n    });\n    let uniqueKeys = Array.from(new Set(keys));\n    return uniqueKeys;\n  };\n\n  function reset() {\n    setEmployeesState(employees);\n  };\n\n  // Sorts or filters table based on type\n  function changeParams(type, affectedRow) {\n    if (type === \"sort\") {\n      setOrderState(affectedRow);\n      if (affectedRow === \"salary\" || affectedRow === \"id\") {\n        const query = `a.${affectedRow} - b.${affectedRow}`\n        const sorted = employeesState.sort((a, b) => eval(query));\n      } else {\n        const query = `a.${affectedRow}.localeCompare(b.${affectedRow})`;\n        const sorted = employeesState.sort((a, b) => eval(query));\n      };\n    } else {\n      const filtered = employeesState.filter((employee) => {\n        return employee.department === affectedRow\n      });\n      setEmployeesState(filtered);\n    }\n  };\n\n  return (\n    <div className=\"my-5\">\n      <Container>\n        <Row>\n          <h1 style={{fontSize: \"2em\"}}>Employee Directory<small className=\"text-muted\"> - Currently sorting by {orderState}</small></h1>\n        </Row>\n        <Row>\n          <Col size=\"md-12\" className=\"col-md-12 d-flex justify-content-center align-content-center\">\n            <Table keys={keysState} data={employeesState} />\n          </Col>\n        </Row>\n\n        <DropDown name=\"sort\" type=\"success\" keys={keysState} func={changeParams} />\n          &nbsp;\n          <DropDown name=\"filter by department\" type=\"secondary\" keys={departmentKeys()} func={changeParams} />\n          &nbsp;\n          <button className=\"btn btn-danger btn-lg btn-block\" onClick={() => reset()}>Reset</button>\n      </Container>\n    </div>\n  )\n}\n\nexport default Main;","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />\n};\n\nexport default Container;","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size} {...props} />\n};\n\nexport default Col;","import React from \"react\";\n\nfunction TableHeader({ keys }) {\n  return <thead className=\"thead-dark\">\n    <tr>\n      {keys.map(key => {\n        return <th scope=\"col\" key={key}>{key}</th>\n      })}\n    </tr>\n  </thead>\n};\n\nexport default TableHeader;","import React from \"react\";\n\nfunction TableBody({ data }) {\n  return <tbody>\n    {data.map(datapoint => {\n      return <tr key={datapoint.id}>\n        <td>{datapoint.id}</td>\n        <td>{datapoint.firstName}</td>\n        <td>{datapoint.lastName}</td>\n        <td>{datapoint.title}</td>\n        <td>{datapoint.department}</td>\n        <td>{datapoint.salary}</td>\n      </tr>\n    })}\n  </tbody>\n};\n\nexport default TableBody;","import React from \"react\";\nimport TableHeader from \"../TableHeader\";\nimport TableBody from \"../TableBody\";\n\n// Requires keys and table data\nfunction Table({ keys, data }) {\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover table-light\">\n        <TableHeader keys={keys} />\n        <TableBody data={data} />\n      </table>\n    </div>\n  );\n};\n\nexport default Table;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Main from \"./pages/Main\";\n\nfunction App() {\n  return(\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}